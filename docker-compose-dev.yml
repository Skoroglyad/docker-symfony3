version: '3.7'

services:
  nginx:
    image: nginx:1.15.3-alpine
    restart: always
    depends_on:
      - php_fpm
    volumes:
      - './app/web:/usr/src/app'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '80:80'

  php_fpm:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    volumes:
      - './app:/usr/src/app'
#    command: sh -c 'composer install --no-interaction --optimize-autoloader && php-fpm'
    restart: always
    depends_on:
      - my_mysql

  my_mysql:
    build:
      context: ./docker/mysql
#    command: --max_allowed_packet=500M #todo перевірити чи так працює, чи потібно ставити байти
    volumes:
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/data:/var/lib/mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}

  node:
    image: node:11-alpine
    volumes:
      - ./app:/usr/src/app
    restart: on-failure
    working_dir: /usr/src/app
    depends_on:
      - php_fpm
#    command: bash -c "npm && npm run dev"

#  phpmyadmin:
#    depends_on:
#      - my_mysql
#    image: phpmyadmin/phpmyadmin
#    restart: always
#    ports:
#      - '8080:80'
#    environment:
#      PMA_HOST: my_mysql
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

#  adminer:
#    image: adminer
#    restart: on-failure
#    ports:
#      - '8080:8080'
